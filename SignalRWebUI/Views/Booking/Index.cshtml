@using SignalRWebUI.Dtos.BookingDtos
@model List<ResultBookingDto>

@{
	ViewData["Title"] = "Index";
	Layout = "~/Views/AdminLayout/Index.cshtml";
}

@* Booking *@

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
<script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>

<div class="content">
	<div class="container-fluid">
		<script type="text/javascript">

			$(document).ready(() => {

				var connection = new signalR.HubConnectionBuilder().withUrl("https://localhost:7142/SignalRHub").build();
				$("#connstatus").text(connection.state);
				connection.start().then(() => {
					$("#connstatus").text(connection.state);

					setInterval(() => {
						connection.invoke("SendBookingList");
					}, 2000);

				}).catch((err) => { console.log(err) });


				connection.on("ReceiveBookingList", (value) => {
					console.log(value);

					let tablehtml = `<table class=table mt-3><thead>
												 <tr>
												 <th scope="col">#</th>
												 <th scope="col">Ad Soyad</th>
												 <th scope="col">Telefon</th>
												 <th scope="col">Kişi Sayısı</th>
												 <th scope="col">Rezervasyon Durumu</th>
												 <th scope="col">Sil</th>
												 <th scope="col">Güncelle</th>
												 <th scope="col">Onayla</th>
												 <th scope="col">İptal Et</th>
												 </tr>
												 </thead>
												 <tbody>`
					// jQuery, web geliştirme için kullanılan popüler, açık kaynaklı bir JavaScript kütüphanesidir.
					// Basit bir API sunarak, HTML dokümanlarının işlenmesini, olay yönetimini, animasyonları ve AJAX etkileşimlerini daha kolay ve hızlı hale getirir.

					// AJAX(Asynchronous JavaScript and XML), web sayfalarının arka planda sunucudan veri alıp göndermesine olanak tanıyan bir web geliştirme tekniğidir.
					// AJAX sayesinde bir web sayfası, tamamını yeniden yüklemek zorunda kalmadan, belirli bir kısmını güncelleyebilir.
					$.each(value, (index, item) => {
						tablehtml += `<tr>
												<th>${index + 1}</th>
												<td>${item.name}</td>
												<td>${item.phone}</td>
												<td>${item.personCount}</td>
												<td>${item.description}</td>
												<td><a href="/Booking/DeleteBooking/${item.bookingID}" class="btn btn-outline-danger">Sil</a></td>
												<td><a href="/Booking/UpdateBooking/${item.bookingID}" class="btn btn-outline-success">Güncelle</a></td>
												<td><a href="/Booking/BookingStatusApproved/${item.bookingID}" class="btn btn-outline-info">Onayla</a></td>
												<td><a href="/Booking/BookingStatusCancelled/${item.bookingID}" class="btn btn-outline-dark">İptal Et</a></td>
												</tr>`
					});
					tablehtml += "</tbody></table>";
					$("#bookingList").html(tablehtml);

				});
			});
			</script>
		<h4 class="page-title">Tables</h4>
		<div class="row">
			<div class="col-md-12">
				<div class="card">
					<div class="card-header">
						<div class="card-title">Basic Table</div>
					</div>
					<div class="card-body">
						<div class="card-sub">
							This is the basic table view of the ready dashboard :
						</div>
						<table class="table mt-3">
							<thead>
								<tr>
									<th scope="col">#</th>
									<th scope="col">Name</th>
									<th scope="col">Phone</th>
									<th scope="col">Email</th>
									<th scope="col">Person Count</th>
									<th scope="col">Status</th>
									<th scope="col">Description</th>
									

									<th scope="col">Delete</th>
									<th scope="col">Update</th>
								</tr>
							</thead>
							<tbody>
								@foreach (var item in Model)
								{
									<tr>
										<td>@item.BookingID</td>
										<td>@item.Name</td>
										<td>@item.Phone</td>
										<td>@item.Mail</td>
										<td>@item.PersonCount</td>
										<td>@item.Status</td>
										<td>@item.Description</td>
										<td>
											<a href="/Booking/DeleteBooking/@item.BookingID" class="btn btn-outline-danger"> Delete </a>
										</td>
										<td>
											<a href="/Booking/UpdateBooking/@item.BookingID" class="btn btn-outline-success">Update</a>
										</td>
									</tr>
								}

							</tbody>
						</table>
						<br />
						<h2>New Booking List</h2>
						<div id="bookingList"></div>
						@* CategoryController içindeki [HttpGet] olarak işaretlenmiş CreateCategory metodunu tetikler.
						Kullanıcı, bu bağlantıya tıkladığında yeni bir kategori eklemek için bir form içeren View döndürülür. *@
						<a href="/Booking/CreateBooking/" class="btn btn-outline-info">Enter Booking</a>
					</div>
				</div>

			</div>
		</div>
	</div>
</div>

